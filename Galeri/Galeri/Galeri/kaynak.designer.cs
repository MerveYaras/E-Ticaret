#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Galeri
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="galeri")]
	public partial class kaynakDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertResimGaleri(ResimGaleri instance);
    partial void UpdateResimGaleri(ResimGaleri instance);
    partial void DeleteResimGaleri(ResimGaleri instance);
    partial void InsertKategori(Kategori instance);
    partial void UpdateKategori(Kategori instance);
    partial void DeleteKategori(Kategori instance);
    #endregion
		
		public kaynakDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["galeriConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public kaynakDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public kaynakDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public kaynakDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public kaynakDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ResimGaleri> ResimGaleris
		{
			get
			{
				return this.GetTable<ResimGaleri>();
			}
		}
		
		public System.Data.Linq.Table<Kategori> Kategoris
		{
			get
			{
				return this.GetTable<Kategori>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResimGaleri")]
	public partial class ResimGaleri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Resim;
		
		private System.Nullable<int> _KatId;
		
		private EntityRef<Kategori> _Kategori;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResimChanging(string value);
    partial void OnResimChanged();
    partial void OnKatIdChanging(System.Nullable<int> value);
    partial void OnKatIdChanged();
    #endregion
		
		public ResimGaleri()
		{
			this._Kategori = default(EntityRef<Kategori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resim", DbType="VarChar(750)")]
		public string Resim
		{
			get
			{
				return this._Resim;
			}
			set
			{
				if ((this._Resim != value))
				{
					this.OnResimChanging(value);
					this.SendPropertyChanging();
					this._Resim = value;
					this.SendPropertyChanged("Resim");
					this.OnResimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KatId", DbType="Int")]
		public System.Nullable<int> KatId
		{
			get
			{
				return this._KatId;
			}
			set
			{
				if ((this._KatId != value))
				{
					if (this._Kategori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKatIdChanging(value);
					this.SendPropertyChanging();
					this._KatId = value;
					this.SendPropertyChanged("KatId");
					this.OnKatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_ResimGaleri", Storage="_Kategori", ThisKey="KatId", OtherKey="Id", IsForeignKey=true)]
		public Kategori Kategori
		{
			get
			{
				return this._Kategori.Entity;
			}
			set
			{
				Kategori previousValue = this._Kategori.Entity;
				if (((previousValue != value) 
							|| (this._Kategori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategori.Entity = null;
						previousValue.ResimGaleris.Remove(this);
					}
					this._Kategori.Entity = value;
					if ((value != null))
					{
						value.ResimGaleris.Add(this);
						this._KatId = value.Id;
					}
					else
					{
						this._KatId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategori");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategori")]
	public partial class Kategori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _KategoriAdi;
		
		private string _Resim;
		
		private EntitySet<ResimGaleri> _ResimGaleris;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKategoriAdiChanging(string value);
    partial void OnKategoriAdiChanged();
    partial void OnResimChanging(string value);
    partial void OnResimChanged();
    #endregion
		
		public Kategori()
		{
			this._ResimGaleris = new EntitySet<ResimGaleri>(new Action<ResimGaleri>(this.attach_ResimGaleris), new Action<ResimGaleri>(this.detach_ResimGaleris));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategoriAdi", DbType="VarChar(550)")]
		public string KategoriAdi
		{
			get
			{
				return this._KategoriAdi;
			}
			set
			{
				if ((this._KategoriAdi != value))
				{
					this.OnKategoriAdiChanging(value);
					this.SendPropertyChanging();
					this._KategoriAdi = value;
					this.SendPropertyChanged("KategoriAdi");
					this.OnKategoriAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resim", DbType="VarChar(550)")]
		public string Resim
		{
			get
			{
				return this._Resim;
			}
			set
			{
				if ((this._Resim != value))
				{
					this.OnResimChanging(value);
					this.SendPropertyChanging();
					this._Resim = value;
					this.SendPropertyChanged("Resim");
					this.OnResimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategori_ResimGaleri", Storage="_ResimGaleris", ThisKey="Id", OtherKey="KatId")]
		public EntitySet<ResimGaleri> ResimGaleris
		{
			get
			{
				return this._ResimGaleris;
			}
			set
			{
				this._ResimGaleris.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResimGaleris(ResimGaleri entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = this;
		}
		
		private void detach_ResimGaleris(ResimGaleri entity)
		{
			this.SendPropertyChanging();
			entity.Kategori = null;
		}
	}
}
#pragma warning restore 1591
